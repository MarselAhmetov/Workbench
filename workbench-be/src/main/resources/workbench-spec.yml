openapi: 3.0.0
info:
  description: Api Documentation
  version: 0.1.0
  title: Workbench
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: Auth
servers:
  - url: /localhost

paths:
  /api/auth/sign-in:
    post:
      tags:
        - Auth
      summary: signIn
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions/Account.yml#/SignInRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions/Account.yml#/SignInResponse'

  /api/auth/sign-up:
    post:
      tags:
        - Auth
      summary: signUp
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions/Account.yml#/SignUpRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions/Account.yml#/SignUpResponse'

  /api/project:
    get:
      tags:
        - Project
      summary: getAllProjectsByUserId
      operationId: getAllProjectsByUserId
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './definitions/Project.yml#/Project'
    post:
      tags:
        - Project
      summary: createProject
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions/Project.yml#/ProjectCreationRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions/Project.yml#/Project'

  /api/project/{projectId}:
    get:
      tags:
        - Project
      summary: getProjectById
      operationId: getProjectById
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions/Project.yml#/Project'

  /api/project/attributes:
    get:
      tags:
        - Project
      summary: getAllAttributes
      operationId: getAllAttributes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './definitions/Project.yml#/ProjectAttribute'

  /api/integration/google-drive:
    post:
      tags:
        - Integration
      summary: getAccessGoogleDriveApi
      operationId: getAccessGoogleDriveApi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions/Integration.yml#/GoogleDriveCode'
      responses:
        200:
          description: OK
          content: {}

  /api/task/template/download:
    get:
      tags:
        - Task
      summary: downloadTaskTemplate
      operationId: downloadTaskTemplate
      parameters:
        - name: taskId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Template file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /api/task/template/upload-to-drive:
    post:
      tags:
        - Task
      summary: uploadTemplateToDrive
      operationId: uploadTemplateToDrive
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions/Task.yml#/Task'
      responses:
        200:
          description: OK
          content: { }

  /api/task/validate/drive:
    post:
      tags:
        - Task
      summary: validateTaskDocumentFromDrive
      operationId: validateTaskDocumentFromDrive
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions/Task.yml#/Task'
      responses:
        200:
          description: OK
          content: { }

  /api/task/validate:
    post:
      tags:
        - Task
      summary: validateTaskDocument
      operationId: validateTaskDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                taskId:
                  type: integer
                  format: int64
                file:
                  type: string
                  format: binary
              required:
                - fields
                - file
      responses:
        200:
          description: OK
          content: { }

  /api/task/{taskId}:
    get:
      tags:
        - Task
      summary: getTaskById
      operationId: getTaskById
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions/Task.yml#/TaskItem'